Actor User {

	UC::WithdrawCash() include cardIdentification
	UC::CheckBalance() include cardIdentification
	UC::depositFunds()

}

UC::cardIdentification()

Service ATMSystem {

	[Operation]
	checkBalance()
	deposit(number)
	inputCard(cardID)
	inputPassword(password)
	printReceipt()
	ejectCard()

	[TempProperty]
	CardIDValidated : Boolean
	PasswordValidated : Boolean
	InputCard : BankCard
	WithdrawedNumber : Integer

}

Interaction WithdrawCashInteraction {
	
	[Participants: User ATMSystem]
	


CallMessage: callMessage1 ( inputCard callMessage1SendingEnd -> execution1StartEnd ) ReturnMessage: callMessage1Return ( execution1FinishEnd -> callMessage1ReturnReceivingEnd callMessage1 ) Execution: execution1 ( ATMSystem execution1StartEnd execution1FinishEnd ) ExecutionEnd:: execution1StartEnd ( ATMSystem execution1 ) ExecutionEnd:: execution1FinishEnd ( ATMSystem execution1 ) MessageEnd:: callMessage1SendingEnd ( User callMessage1 ) MessageEnd:: callMessage1ReturnReceivingEnd ( User callMessage1Return ) }


Entity BankCard {

	CardID : String
	Password : String
	CardStatus : CardStatus[NORMAL|SUSPEND|CANNEL]
	balance : Real

	[Refer]
	belongedUser : User
	has : Transcation*

}

Entity DespositCard extends BankCard {

}

Entity CreditCard extends BankCard {

}

Entity User {

	UserID : Integer
	Name : String
	Address : String

	[Refer]
	ownedCard : BankCard*

}

Entity Transcation {

	WithdrawedNum : Integer
	BalanceAfterWithdraw : Real

	[Refer]
	involvedCard : BankCard

}

